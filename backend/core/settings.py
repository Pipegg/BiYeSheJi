"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3kavayt#(1_wy#h-bth6l%e6dwq78+pw-+=44(*+j)n%^00#)4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# 允许所有主机 （测试环境）
ALLOWED_HOSTS = ['*']

# Application definition
# 安装的应用列表，每个应用添加都需要在下面这里进行注册
INSTALLED_APPS = [
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'admins',
    'xuesheng',
    'youqinglianjie',
    'lunbotu',
    'shoucang',
    'siliao',
    'xiaoxi',
    'luntanjiaoliu',
    'luntanfenlei',
    'jiaoliuhuifu',
    'jiaoshi',
    'kechengfenlei',
    'kechengxinxi',
    'kechengshipin',
    'kechengziyuan',
    'kechengxuexi',
    'xuexijindu',
    'xuexijilu',
    'buzhizuoye',
    'tijiaozuoye',
    'zuoyepiyue',
    'wenda',
    'huida',
    'wendaxiaoxi',
    'chat',
    'chatbot',
    'common',
    'ai_service',
    'rest_framework',
]

# 设置访问中间件
MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # 确保这是第一个中间件
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',  # 临时注释掉CSRF中间件
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'core.middleware.MiddlewareProxy'
]

# 跨域请求配置
CORS_ALLOW_ALL_ORIGINS = False  # 禁用允许所有源
CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:5174",
    "http://localhost:5174",
]
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS'
]
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'token',
]
# 预检请求的有效期（秒）
CORS_PREFLIGHT_MAX_AGE = 86400  # 24小时

# 安全设置
CSRF_TRUSTED_ORIGINS = [
    "http://127.0.0.1:5174",
    "http://localhost:5174",
]
CSRF_COOKIE_SECURE = False
CSRF_COOKIE_HTTPONLY = False
CSRF_USE_SESSIONS = False
SESSION_COOKIE_SECURE = False
SESSION_COOKIE_SAMESITE = None

# 初始路由地址
ROOT_URLCONF = 'core.urls'

# 设置模板引擎
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# 设置WSGI应用程序
WSGI_APPLICATION = 'core.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# 设置数据参数
DATABASES = {
    'default': {
        # mysql 数据库引擎
        'ENGINE': 'django.db.backends.mysql',
        # 数据库 库名称
        'NAME': 'bishe',
        # 数据库地址
        'HOST': '127.0.0.1',
        # 数据库端口
        'PORT': 3309,
        # 数据库账号
        'USER': 'root',
        # 数据库密码
        'PASSWORD': 'root'
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

# 密码验证
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# 国际化
# https://docs.djangoproject.com/en/4.2/topics/i18n/

# 语言代码
LANGUAGE_CODE = 'zh-hans'

# 时区
TIME_ZONE = 'Asia/Shanghai'

# 使用国际化
USE_I18N = True

# 使用本地化
USE_L10N = True

# 使用时区
USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# 静态文件路径
STATIC_URL = 'static/'

# 上传文件路径
MEDIA_URL = '/upload/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'static/upload')  # 默认根目录

# 静态文件路径
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

# 设置静态根据路径
STATIC_ROOTS = os.path.join(BASE_DIR, "static")

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

# 默认自动字段类型
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 日志记录属性
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "{levelname} {asctime} {module} {message}",
            "style": "{",
        },
    },
    "handlers": {
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "verbose",
        },
    },
    "loggers": {
        "core.middleware": {
            "handlers": ["console"],
            "level": "DEBUG",
            "propagate": False,
        },
    },
    "root": {
        "handlers": ["console"],
        "level": "INFO",
    },
}

# 设置为无缓存
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
    }
}

# 禁用 URL 尾部斜杠
APPEND_SLASH = False

# 添加REST Framework配置
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',  # 修改为允许所有请求
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}

# 添加AI模型配置
AI_MODEL_CONFIG = {
    'MODEL_NAME': 'qwen-turbo',  # 使用阿里云百炼的qwen-turbo模型
    'MAX_LENGTH': 2048,
    'TEMPERATURE': 0.7,
    'TOP_P': 0.9,
    'TOP_K': 50,
    'REPETITION_PENALTY': 1.1
}
